#Interleave first half with second half of queue
#Reorder queue
#Return ArrayList




class Solution {
    
    public static ArrayList<Integer> rearrangeQueue(int N, Queue<Integer> q) {
        ArrayList<Integer> ans=new ArrayList<>();
        Stack<Integer> st=new Stack<>();
        //pushing first half into a stack
        for(int i=1;i<=N/2;i++){
            st.push(q.remove());
        }
        //now adding elements again back to the queue after popping from
        //stack
        while(!st.isEmpty()){
            q.add(st.pop());
        }
    
        for(int i=1;i<=N/2;i++){
            q.add(q.remove());
        }
         //push first half to stack
        for(int i=1;i<=N/2;i++){
            st.push(q.remove());
        }
        
        while(!st.isEmpty()){
            q.add(st.pop());
            q.add(q.remove());
        }
        
        for(int i=0;i<N;i++){
            ans.add(q.remove());
        }
        return ans;
    }
}
